<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Hexo</title>
    <link>http://yoursite.com/</link>
    
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Tue, 24 Dec 2019 09:06:39 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Nginx + Flask + Uwsgi 초기 세팅</title>
      <link>http://yoursite.com/2019/11/09/setting/nginx_flask_uwsgi/</link>
      <guid>http://yoursite.com/2019/11/09/setting/nginx_flask_uwsgi/</guid>
      <pubDate>Sat, 09 Nov 2019 06:20:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Nginx + Flask + Uwsgi 초기 세팅 기록.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Nginx + Flask + Uwsgi 초기 세팅 기록.</li></ul><a id="more"></a>​<h2 id="설치-및-실행"><a href="#설치-및-실행" class="headerlink" title="설치 및 실행"></a>설치 및 실행</h2><hr><ol><li><p>Nginx, Flask, Uwsgi를 설치한다.</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">pip3 install nginx</span></pre></td></tr><tr><td class="code"><pre><span class="line">pip3 install uwsgi</span></pre></td></tr><tr><td class="code"><pre><span class="line">pip3 install flask</span></pre></td></tr><tr><td class="code"><pre><span class="line">pip3 install uwsgi-plugin-python</span></pre></td></tr></table></figure></li><li><p>Flask 실행</p><ul><li><p>test.py 라는 파일을 만들고 실행하여 결과를 확인한다.</p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask</span></pre></td></tr><tr><td class="code"><pre><span class="line">application = Flask(__name__)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-meta">@application.route("/")</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello</span><span class="hljs-params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-string">"&lt;h1&gt;Hello!&lt;/h1&gt;"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    application.run(host=<span class="hljs-string">'0.0.0.0'</span>)</span></pre></td></tr></table></figure></li><li><p>curl 명령어를 실행해서 확인해본다.</p>  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">curl http://localhost:5000</span></pre></td></tr></table></figure></li></ul></li><li><p>uwsgi 파일 만들기</p> <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> test <span class="hljs-keyword">import</span> application</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">"__main__"</span>:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    application.run()</span></pre></td></tr></table></figure><p> curl 명령어를 실행시켜 확인</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">uwsgi --socket 0.0.0.0:5000 --protocol=http -w wsgi</span></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>ini 파일을 만든다.</p><ul><li><p>매번 uwsgi 파일을 실행시킬 때 명령어를 써줄 수 없으니 파일을 만들어둔다.</p></li><li><p>socket 파일은 아래 실행 명령어를 실행시키면 자동으로 생성 되어진다.</p>  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">[uwsgi]</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-built_in">chdir</span> = /var/www/html/StoryAI/storyai/web</span></pre></td></tr><tr><td class="code"><pre><span class="line">module = wsgi</span></pre></td></tr><tr><td class="code"><pre><span class="line">socket = /tmp/myproject.sock</span></pre></td></tr><tr><td class="code"><pre><span class="line">chmod-socket = 666</span></pre></td></tr></table></figure></li><li><p>실행 명령어</p>  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">uwsgi --ini myproject.ini</span></pre></td></tr></table></figure></li></ul></li></ol><ol start="5"><li><p>nginx의 환경설정을 변경한다.</p><ul><li><p>/etc/nginx/sites-avilable/defalut</p></li><li><p>다른 예제들에서는 location @app을 설정해서 하는데 이거 인식이 잘 안되서 location / { 부분에 설정을 해주니까 되었다.</p></li><li><p>sock 파일을 통해서 서로 연결되어진다.</p></li><li><p>여기서 실수 했던게 try_files $url $url\ =404; 부분을 주석처리 안하니까 app.route를 다른걸 설정하니까 접속이 되지 않았다. 뻘짓했다.</p><center><img src="/images/setting/20191109_1520.png"></center><br></li></ul></li></ol><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><hr><ul><li><p>[URL] : <a href="https://cjh5414.github.io/flask-uwsgi-nginx/" target="_blank" rel="noopener">https://cjh5414.github.io/flask-uwsgi-nginx/</a></p></li><li><p>[URL] : <a href="https://whatisthenext.tistory.com/124" target="_blank" rel="noopener">https://whatisthenext.tistory.com/124</a></p></li><li><p>[URL] : <a href="https://twpower.github.io/43-run-uwsgi-by-using-ini-file" target="_blank" rel="noopener">https://twpower.github.io/43-run-uwsgi-by-using-ini-file</a></p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/09/setting/nginx_flask_uwsgi/#disqus_thread</comments>
    </item>
    
    <item>
      <title>EC2 Instance 웹서버 설치 후 구동하기</title>
      <link>http://yoursite.com/2019/11/08/setting/aws_port_open/</link>
      <guid>http://yoursite.com/2019/11/08/setting/aws_port_open/</guid>
      <pubDate>Fri, 08 Nov 2019 14:17:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;EC2 Webserver 설치 후 구동 기록.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>EC2 Webserver 설치 후 구동 기록.</li></ul><a id="more"></a>​<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><hr><p>Nginx를 설치하고 IPv4 퍼블릭 IP 주소 값으로 접근을 했는데 되지 않았다.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><hr><p>방화벽에 80번 포트를 추가해주어야 한다.</p><center><img src="/images/setting/20191108_2317.png"></center><br><ul><li><p>Descripttion에 Security group의 launch-wizard를 선택한다.</p></li><li><p>Inbound 탭을 누른다.</p></li><li><p>Edit 버튼을 누르고 Add Rule 버튼을 클릭한다.</p><center><img src="/images/setting/20191108_2318.png"></center><br></li></ul><p>이렇게 추가하고 들어가면 끝!</p><p>접속이 될 것 이다.</p><h2 id="참고-URL"><a href="#참고-URL" class="headerlink" title="참고 URL"></a>참고 URL</h2><hr><p><a href="https://medium.com/@taeyeolkim/aws-ec2%EC%97%90-%EC%9B%B9%EC%84%9C%EB%B2%84-nginx-%EC%84%A4%EC%B9%98%ED%95%98%EA%B3%A0-%EA%B5%AC%EB%8F%99%ED%95%98%EA%B8%B0-a46a6e9484a8" target="_blank" rel="noopener">https://medium.com/@taeyeolkim/aws-ec2%EC%97%90-%EC%9B%B9%EC%84%9C%EB%B2%84-nginx-%EC%84%A4%EC%B9%98%ED%95%98%EA%B3%A0-%EA%B5%AC%EB%8F%99%ED%95%98%EA%B8%B0-a46a6e9484a8</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/08/setting/aws_port_open/#disqus_thread</comments>
    </item>
    
    <item>
      <title>EC2 Instance 생성 후 putty 접속</title>
      <link>http://yoursite.com/2019/11/08/setting/aws_putty/</link>
      <guid>http://yoursite.com/2019/11/08/setting/aws_putty/</guid>
      <pubDate>Fri, 08 Nov 2019 14:11:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;EC2에 putty로 접속하는 방법 기록.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>EC2에 putty로 접속하는 방법 기록.</li></ul><a id="more"></a>​<h2 id="AWS-EC2-Instance-생성"><a href="#AWS-EC2-Instance-생성" class="headerlink" title="AWS EC2 Instance 생성"></a>AWS EC2 Instance 생성</h2><hr><ul><li>[URL] : <a href="https://aws.amazon.com/ko/" target="_blank" rel="noopener">https://aws.amazon.com/ko/</a></li></ul><center><img src="/images/setting/20191108_2311.png"></center><br><ul><li><p>콘솔에 로그인 하기를 한 후 EC2 인스턴스를 생성한다.</p></li><li><p>사실 생성까지는 쉽지만 약간 어려울 수 있는게 보안 그룹에 Key File 부분이 헷갈릴 수 있다.</p></li><li><p>우선 .pem 확장자 파일을 다운 받는다. ( 접속 때 중요하게 사용되어진다. )</p></li></ul><h2 id="AWS-putty-접속"><a href="#AWS-putty-접속" class="headerlink" title="AWS putty 접속"></a>AWS putty 접속</h2><hr><ul><li><p>우선 puttygen을 사용해 .pem 파일을 .ppk 파일로 생성한다.</p></li><li><p>Load 버튼을 클릭한 후에 방금 만들었던 .pem 파일을 선택한다.</p><center><img src="/images/setting/20191108_2312.png" alt="load 버튼 클릭"></center><br></li><li><p>save 버튼을 누르고 이름을 지정한 후 저장한다.</p><center><img src="/images/setting/20191108_2313.png" alt="save 버튼 클릭"></center><br></li><li><p>Host Name에는 퍼블릭 DNS(IPv4)의 주소값을 입력한다.</p><center><img src="/images/setting/20191108_2314.png" alt="host name 입력"></center><br></li><li><p>접속&gt;SSH&gt;AUTH로 가서 Private Key파일을 선택한다.</p><center><img src="/images/setting/20191108_2315.png"></center><br></li></ul><ul><li><p>.ppk 파일을 세팅하고 접속한다.</p></li><li><p>EC2에 접속하면 “login as:”가 화면에 뜨는데 우분투로 설치했다면 ubuntu로 입력한다. ( 처음에 아무생각 없이 root를 했다가 안되었다. )</p></li></ul><h2 id="참고-URL"><a href="#참고-URL" class="headerlink" title="참고 URL"></a>참고 URL</h2><hr><ul><li>[URL] : <a href="https://hyeonstorage.tistory.com/271" target="_blank" rel="noopener">https://hyeonstorage.tistory.com/271</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/11/08/setting/aws_putty/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ImportError dll load failed 지정된 모듈을 찾을 수 없습니다</title>
      <link>http://yoursite.com/2019/09/11/error_set/pytorch_error/</link>
      <guid>http://yoursite.com/2019/09/11/error_set/pytorch_error/</guid>
      <pubDate>Wed, 11 Sep 2019 08:33:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Error Message : ImportError: dll load failed: 지정된 모듈을 찾을 수 없습니다&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Error Message : ImportError: dll load failed: 지정된 모듈을 찾을 수 없습니다</li></ul><a id="more"></a><h2 id="문제-상황"><a href="#문제-상황" class="headerlink" title="문제 상황"></a>문제 상황</h2><hr><p>import torch는 문제가 없이 잘 되었는데…<br>import torchvision에서 에러가 터졌다.<br>지정된 모듈을 찾을 수 없다는 에러가 터졌다.</p><p>이게 어디서 자주 본 에러여서 기억을 더음어 보니…<br>tensorflow gpu 할 때 본 에러였다.</p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><hr><ol><li><p>파일 설치해보기</p><ul><li><p>Intel-openmp</p></li><li><p>visual studio 2017 재배포파일</p><p>Intel-openmp는 anaconda 환경에 설치하면 된다.<br>이 방법으로도 해결이 되지 않으면 2번 방법을 적용해보자.</p></li></ul></li></ol><ol start="2"><li><p>torchvision 버전 낮춰보기</p><p> 위에 방법으로 해결되지 않는다면 torchvision 버전을 0.4버전에서 0.2버전으로 낮춰보자.<br> 나는 이렇게 해서 해결했다.<br> 내 cuda 버전과 torchvision 버전이 호환되지 않아서 발생한 문제인 것 같다.</p></li></ol><h2 id="참고-URL"><a href="#참고-URL" class="headerlink" title="참고 URL"></a>참고 URL</h2><hr><ul><li>[URL] : <a href="https://mclearninglab.tistory.com/30" target="_blank" rel="noopener">https://mclearninglab.tistory.com/30</a></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/09/11/error_set/pytorch_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>tensorflow version error</title>
      <link>http://yoursite.com/2019/04/08/error_set/tensorflow_version_error/</link>
      <guid>http://yoursite.com/2019/04/08/error_set/tensorflow_version_error/</guid>
      <pubDate>Mon, 08 Apr 2019 05:46:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;에러 메세지 : batch() got an unexpected keyword argument ‘drop_remainder’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;에러 원인 : Tensorflow 버전이 업그레이드 되면서 run_classifier.py의 drop_remainder 파라미터가 없어졌다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;해결 방법 : runclassfier.py 파일에서 drop_remainder 코드를 제거해줘야 한다.  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li><p>에러 메세지 : batch() got an unexpected keyword argument ‘drop_remainder’</p></li><li><p>에러 원인 : Tensorflow 버전이 업그레이드 되면서 run_classifier.py의 drop_remainder 파라미터가 없어졌다.</p></li><li><p>해결 방법 : runclassfier.py 파일에서 drop_remainder 코드를 제거해줘야 한다.  </p></li></ul><a id="more"></a><center><img src="/images/error_set/ErrorSet1_1.png" width="100%" alt="변경 전"></center><br><center><img src="/images/error_set/ErrorSet1_2.png" width="100%" alt="변경 후"></center>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/08/error_set/tensorflow_version_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Loaded runtime CuDNN library 7101</title>
      <link>http://yoursite.com/2019/04/07/error_set/tensorflow_gpu_error/</link>
      <guid>http://yoursite.com/2019/04/07/error_set/tensorflow_gpu_error/</guid>
      <pubDate>Sun, 07 Apr 2019 07:20:00 GMT</pubDate>
      <description>
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;p&gt;에러 메세지 : Loaded runtime CuDNN library: 7101 (compatibility version 7100) but source was compiled with 7003 (c&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;에
        
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li><p>에러 메세지 : Loaded runtime CuDNN library: 7101 (compatibility version 7100) but source was compiled with 7003 (c</p></li><li><p>에러 원인 : tensorflow-gpu가 돌아가는 환경설정이  CUDA Toolkit 버전과 cuDNN 버전이 호환되지가 않아서 발생한 문제이다. </p></li><li><p>해결 방법 : Toolkit은 9.0 cuDNN은 7.0.5로 호환해주니 해결되었다.</p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/07/error_set/tensorflow_gpu_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>pandas No module named &#39;pandas.core.internals.managers&#39;</title>
      <link>http://yoursite.com/2019/04/07/error_set/pandas_error/</link>
      <guid>http://yoursite.com/2019/04/07/error_set/pandas_error/</guid>
      <pubDate>Sun, 07 Apr 2019 03:43:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Error Message : ModuleNotFoundError: No module named ‘pandas.core.internals.managers’; ‘pandas.core.internals’ is no&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​&lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Error Message : ModuleNotFoundError: No module named ‘pandas.core.internals.managers’; ‘pandas.core.internals’ is no</li></ul><p>​<a id="more"></a></p><h2 id="발생-원인"><a href="#발생-원인" class="headerlink" title="발생 원인"></a>발생 원인</h2><hr><p>A컴퓨터에서 잘 작동했던 파이썬 코드를 B컴퓨터에서 실행시키니 저 error가 계속 발생했다.<br>처음에는 pandas 환경과 Python 버전 환경이 달라서 발생한 줄 알았다.<br>그래서 환경을 똑같이 맞추어줬는데도 계속 에러가 발생했다.<br>일단 에러 발생 부분을 보니 pickle.load() 하는 부분에서 에러가 발생했다.</p><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><hr><p>결국 해결한 방법은 A 컴퓨터에서 pickle 파일 만들 때 pandas.DataFrame으로 넣지 않고  pandas.to_dict()로 바꿔서 파일을 만들었다.<br>B 컴퓨터에서 pickle 파일 불러오고 dict 파일을 pandas.DataFrame으로 넣어서 해결했다.<br>pickle 파일에 데이터 넣을 때 함부로 넣으면 안 되나 보다.</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/07/error_set/pandas_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Tensorflow RuntimeError Missing implementation that supports loader</title>
      <link>http://yoursite.com/2019/04/04/error_set/tensorflow_hub_error-1/</link>
      <guid>http://yoursite.com/2019/04/04/error_set/tensorflow_hub_error-1/</guid>
      <pubDate>Thu, 04 Apr 2019 02:44:00 GMT</pubDate>
      <description>
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;p&gt;에러 메세지 : RuntimeError: Missing implementation that supports: loader(*(‘/tmp/tfhub_modules/mobilenet_module’,)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;해
        
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li><p>에러 메세지 : RuntimeError: Missing implementation that supports: loader(*(‘/tmp/tfhub_modules/mobilenet_module’,)</p></li><li><p>해결 방법 : loader 뒤에 뜨는 에러메세지 경로에 들어가서 tf_hub 파일을 지워주고 다시 실행시키니 작동하였다.<br>이게 갑자기 어느 순간에 에러가 발생하는데… 왜 발생하는지는 모르겠다.<br>그래도 해결방법이 단순하다.</p></li><li><p>참고 URL<br><a href="https://stackoverflow.com/questions/54029556/how-to-fix-runtimeerror-missing-implementation-that-supports-loader-when-cal" target="_blank" rel="noopener">https://stackoverflow.com/questions/54029556/how-to-fix-runtimeerror-missing-implementation-that-supports-loader-when-cal</a></p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/04/04/error_set/tensorflow_hub_error-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Tensorflow ImportError cannot import name &#39;regex_replace&#39;</title>
      <link>http://yoursite.com/2019/03/27/error_set/tensorflow_hub_error/</link>
      <guid>http://yoursite.com/2019/03/27/error_set/tensorflow_hub_error/</guid>
      <pubDate>Wed, 27 Mar 2019 04:41:00 GMT</pubDate>
      <description>
      
        
        
          &lt;ul&gt;
&lt;li&gt;해결 방법 : ELMo 사용하려고 Tensorflow Hub를 설치하고 실행시켜보니 위에 error 발생!&lt;br&gt;처음에 0.3 버전으로 설치했는데…&lt;br&gt;혹시나 해서 버전 0.2로 낮춰서 해보니 실행이 되었다… &lt;/li&gt;
&lt;/ul&gt;

        
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>해결 방법 : ELMo 사용하려고 Tensorflow Hub를 설치하고 실행시켜보니 위에 error 발생!<br>처음에 0.3 버전으로 설치했는데…<br>혹시나 해서 버전 0.2로 낮춰서 해보니 실행이 되었다… </li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/27/error_set/tensorflow_hub_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Google Colab 사용법 정리</title>
      <link>http://yoursite.com/2019/03/22/setting/colab_tutorial/</link>
      <guid>http://yoursite.com/2019/03/22/setting/colab_tutorial/</guid>
      <pubDate>Fri, 22 Mar 2019 02:19:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;colab 기초 사용법&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>colab 기초 사용법</li></ul><a id="more"></a>​<h2 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h2><hr><ol><li><p>Colab에 접속한다.</p><ul><li>[URL] : <a href="https://colab.research.google.com/notebooks/welcome.ipynb" target="_blank" rel="noopener">https://colab.research.google.com/notebooks/welcome.ipynb</a><br>​</li></ul></li><li><p>새로운 python3.ipynb 파일을 만든 후 google drive mount를 한다.</p><ul><li><p>해당 코드를 실행하면 enter authorization code를 입력하라고 창이 뜬다.</p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> google.colab <span class="hljs-keyword">import</span> drive</span></pre></td></tr><tr><td class="code"><pre><span class="line">drive.mount(<span class="hljs-string">'/content/gdrive'</span>)</span></pre></td></tr></table></figure></li></ul></li></ol><ol start="3"><li><p>authorization code 받는 주소</p><ul><li><p>[URL] : <a href="https://colab.research.google.com/notebooks/io.ipynb#scrollTo=RWSJpsyKqHjH" target="_blank" rel="noopener">https://colab.research.google.com/notebooks/io.ipynb#scrollTo=RWSJpsyKqHjH</a><br>​</p></li><li><p>해당 URL에 들어가면 최종적으로 authorization code를 받을 수 있다.</p><center><img src="/images/setting/20190322_1119.png" alt="tensorboard 실행 이미지"></center><br></li></ul></li></ol><ol start="4"><li><p>foo.txt 파일을 드라이브에 업로드</p> <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">with</span> open(<span class="hljs-string">'/content/gdrive/My Drive/foo.txt'</span>, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> f:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    f.write(<span class="hljs-string">'Hello Google Drive!'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">!cat /content/gdrive/My\ Drive/foo.txt</span></pre></td></tr></table></figure><p>​</p></li></ol>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/22/setting/colab_tutorial/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Tensorboard 사용법</title>
      <link>http://yoursite.com/2019/03/08/setting/tensorboard_setting/</link>
      <guid>http://yoursite.com/2019/03/08/setting/tensorboard_setting/</guid>
      <pubDate>Fri, 08 Mar 2019 08:24:00 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;생각&quot;&gt;&lt;a href=&quot;#생각&quot; class=&quot;headerlink&quot; title=&quot;생각&quot;&gt;&lt;/a&gt;생각&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;처음에 아무 생각 없이 하다가 내 tensorflow를 아나콘다 가상환경에 설치한 사실을 깜빡하고 tensorboard를 실행 못시켰었다. &lt;/li&gt;
&lt;li&gt;tensorflow가 설치되어 있는 가상환경을 activate하고 tensorboard를 실행시키자. ㅋㅋ&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<h2 id="생각"><a href="#생각" class="headerlink" title="생각"></a>생각</h2><hr><ul><li>처음에 아무 생각 없이 하다가 내 tensorflow를 아나콘다 가상환경에 설치한 사실을 깜빡하고 tensorboard를 실행 못시켰었다. </li><li>tensorflow가 설치되어 있는 가상환경을 activate하고 tensorboard를 실행시키자. ㅋㅋ</li></ul><a id="more"></a>​<h2 id="설치-및-실행"><a href="#설치-및-실행" class="headerlink" title="설치 및 실행"></a>설치 및 실행</h2><hr><ol><li><p>tensorboard 설치 </p><ul><li>기본적으로 tensorflow 설치하면 자동으로 tensorboard가 설치되어진다.</li></ul></li><li><p>mygraph라는 폴더를 만들어서 log를 저장한다.</p> <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> tensorflow <span class="hljs-keyword">as</span> tf</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">a = tf.constant(<span class="hljs-number">5</span>, name=<span class="hljs-string">'input_a'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">b = tf.constant(<span class="hljs-number">7</span>, name=<span class="hljs-string">'input_b'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">c = tf.multiply(a, b, name=<span class="hljs-string">'mul_c'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">d = tf.add(a, b, name=<span class="hljs-string">'add_d'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">e = tf.add(c, d, name=<span class="hljs-string">'add_e'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">sess = tf.Session()</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(sess.run(e))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">wirter = tf.summary.FileWriter(<span class="hljs-string">'./mygraph'</span>,sess.graph)</span></pre></td></tr></table></figure></li><li><p>mygraph가 위치하는 폴더에 가서 아래의 명령어를 실행시켜준다.</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">tensorboard --logdir=<span class="hljs-string">"mygraph"</span></span></pre></td></tr></table></figure></li><li><p>커맨드창 가장 하단에 있는 <a href="http://localhost:6006으로" target="_blank" rel="noopener">http://localhost:6006으로</a> 들어가면 tensorboard가 실행되어진다.</p> <center><img src="/images/setting/20190308_1724.png" alt="tensorboard 실행 이미지"></center><br></li><li><p>최종 결과</p> <center><img src="/images/setting/20190308_1725.png" alt="tensorboard 실행 이미지"></center><br>​</li><li><p>응용</p></li></ol><ul><li><p>아래의 코드는 callback 함수로 만들어서 log를 쌓는 방법이다.</p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">from</span> keras.callbacks <span class="hljs-keyword">import</span> TensorBoard</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">create_callbacks</span><span class="hljs-params">()</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    tensorboard_callback = TensorBoard(log_dir=<span class="hljs-string">'./mygraph/mlp'</span>, histogram_freq=<span class="hljs-number">1</span>, batch_size=<span class="hljs-number">32</span>, write_graph=<span class="hljs-literal">True</span>, write_grads=<span class="hljs-literal">False</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">return</span> [tensorboard_callback]</span></pre></td></tr></table></figure></li><li><p>위의 코드를 만든후에 model을 실행시킬 때 콜백으로 넣어주면 log가 실시간으로 쌓인다.</p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line">callbacks = create_callbacks()</span></pre></td></tr><tr><td class="code"><pre><span class="line">model.fit(x=data[<span class="hljs-string">"train_X"</span>], y=data[<span class="hljs-string">"train_y"</span>], batch_size=<span class="hljs-number">32</span>, epochs=<span class="hljs-number">200</span>, verbose=<span class="hljs-number">1</span>, validation_data=(data[<span class="hljs-string">"val_X"</span>], data[<span class="hljs-string">"val_y"</span>]), callbacks=callbacks)</span></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/08/setting/tensorboard_setting/#disqus_thread</comments>
    </item>
    
    <item>
      <title>python encoding error</title>
      <link>http://yoursite.com/2019/03/06/error_set/python_encoding_error/</link>
      <guid>http://yoursite.com/2019/03/06/error_set/python_encoding_error/</guid>
      <pubDate>Wed, 06 Mar 2019 01:51:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;에러 메세지 : UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xff in position 0: invalid&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;해결 방법 : encoding 부분을 utf-8에서 utf-16으로 바꿔주니까 된다. ( python3 기준 )&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li><p>에러 메세지 : UnicodeDecodeError: ‘utf-8’ codec can’t decode byte 0xff in position 0: invalid</p></li><li><p>해결 방법 : encoding 부분을 utf-8에서 utf-16으로 바꿔주니까 된다. ( python3 기준 )</p></li></ul><a id="more"></a><ul><li><p>예시 코드</p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-comment"># -*- coding: utf-8 -*-:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> csv</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">f = open(<span class="hljs-string">'1_50000.csv'</span>, <span class="hljs-string">'r'</span>, encoding=<span class="hljs-string">'utf-16'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">rdr = csv.reader(f)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> rdr:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(line)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">f.close()</span></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/03/06/error_set/python_encoding_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Scrapy AttributeError module &#39;lib&#39; has no attribute &#39;Cryptography_HAS_SSL_ST</title>
      <link>http://yoursite.com/2019/02/26/error_set/scrapy_error/</link>
      <guid>http://yoursite.com/2019/02/26/error_set/scrapy_error/</guid>
      <pubDate>Tue, 26 Feb 2019 10:30:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Error Message : AttributeError module ‘lib’ has no attribute ‘Cryptography_HAS_SSL_ST&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;원인&quot;&gt;&lt;a href=&quot;#원인&quot; class=&quot;headerlink&quot; title=&quot;원인&quot;&gt;&lt;/a&gt;원인&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Scrapy 설치하고 실행하려는데 에러가 발생했었다.&lt;br&gt;찾아보니까 pyOpenSSL 문제인 것 같다.&lt;br&gt;그냥 install 하나 해주니까 해결되었다. &lt;/p&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Error Message : AttributeError module ‘lib’ has no attribute ‘Cryptography_HAS_SSL_ST</li></ul><h2 id="원인"><a href="#원인" class="headerlink" title="원인"></a>원인</h2><hr><p>Scrapy 설치하고 실행하려는데 에러가 발생했었다.<br>찾아보니까 pyOpenSSL 문제인 것 같다.<br>그냥 install 하나 해주니까 해결되었다. </p><a id="more"></a><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">pip3 install pyOpenSSL==0.15.1</span></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/26/error_set/scrapy_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Pytube Sample Code</title>
      <link>http://yoursite.com/2019/02/25/setting/pytube_sample/</link>
      <guid>http://yoursite.com/2019/02/25/setting/pytube_sample/</guid>
      <pubDate>Mon, 25 Feb 2019 02:36:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Python을 이용한 Youtube 다운로드 라이브러리.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Python을 이용한 Youtube 다운로드 라이브러리.</li></ul><a id="more"></a>​<ol><li><p>pip 툴을 사용해 pytube를 install 한다.</p></li><li><p>code를 돌려 youtube 영상을 다운 받는다.</p></li></ol><figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-comment"># -*- coding: utf-8 -*-</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> subprocess</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">import</span> pytube</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">yt = pytube.YouTube(<span class="hljs-string">"https://www.youtube.com/watch?v=ZMpQgvmw3kk"</span>) <span class="hljs-comment">#다운받을 동영상 URL 지정</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">vids= yt.streams.all()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-comment">#영상 형식 리스트 확인</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(len(vids)):</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(i,<span class="hljs-string">'. '</span>,vids[i])</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">vnum = int(input(<span class="hljs-string">"다운 받을 화질은? "</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">parent_dir = <span class="hljs-string">"/home/lee"</span> <span class="hljs-comment">#저장 경로 지정(Windows or mac)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">vids[vnum].download(parent_dir) <span class="hljs-comment">#다운로드 수행</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">default_filename = vids[vnum].default_filename</span></pre></td></tr><tr><td class="code"><pre><span class="line">subprocess.call([<span class="hljs-string">'ffmpeg'</span>, <span class="hljs-string">'-i'</span>,                 <span class="hljs-comment">#cmd 명령어 수행</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    os.path.join(parent_dir, default_filename)</span></pre></td></tr><tr><td class="code"><pre><span class="line">])</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(<span class="hljs-string">'동영상 다운로드 및 mp3 변환 완료!'</span>)</span></pre></td></tr></table></figure><p>​</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/25/setting/pytube_sample/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Google Speech API 아무것도 출력이 되지 않는 에러</title>
      <link>http://yoursite.com/2019/02/25/error_set/google_speech_api_error/</link>
      <guid>http://yoursite.com/2019/02/25/error_set/google_speech_api_error/</guid>
      <pubDate>Mon, 25 Feb 2019 02:32:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;원인&lt;br&gt;아래 코드의 sample_rate_hertz가 일치하지 않아서 그렇다.&lt;br&gt;ffmpeg를 사용해 동영상 확장자를 변환할 때 맞춰주어야 한다.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>원인<br>아래 코드의 sample_rate_hertz가 일치하지 않아서 그렇다.<br>ffmpeg를 사용해 동영상 확장자를 변환할 때 맞춰주어야 한다.</li></ul><a id="more"></a><hr><ul><li><p>해결방법<br>  ffmpeg로 변환을 시킨다.<br>  sample_rate_hertz가 16000으로 설정했기 때문에 변활시킬 때 16000으로 바꿔주어야 한다.</p>  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">ffmpeg -i audio_file.mp4 -acodec pcm_s16le -ac 1 -ar 16000 audio_file.wav</span></pre></td></tr></table></figure></li></ul><ul><li><p>예제 코드  </p>  <figure class="highlight python hljs"><table><tr><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">transcribe_file</span><span class="hljs-params">(speech_file)</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-string">"""Transcribe the given audio file."""</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">from</span> google.cloud <span class="hljs-keyword">import</span> speech</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">from</span> google.cloud.speech <span class="hljs-keyword">import</span> enums</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">from</span> google.cloud.speech <span class="hljs-keyword">import</span> types</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    client = speech.SpeechClient()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">with</span> io.open(speech_file, <span class="hljs-string">'rb'</span>) <span class="hljs-keyword">as</span> audio_file:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        content = audio_file.read()</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    audio = types.RecognitionAudio(content=content)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    config = types.RecognitionConfig(</span></pre></td></tr><tr><td class="code"><pre><span class="line">        encoding=enums.RecognitionConfig.AudioEncoding.LINEAR16,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        sample_rate_hertz=<span class="hljs-number">16000</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        language_code=<span class="hljs-string">'ko-KR'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    response = client.recognize(config, audio)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    print(<span class="hljs-string">"test2"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-comment"># Each result is for a consecutive portion of the audio. Iterate through</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-comment"># them to get the transcripts for the entire audio file.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="hljs-keyword">for</span> result <span class="hljs-keyword">in</span> response.results:</span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="hljs-string">"test3"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="hljs-comment"># The first alternative is the most likely one for this portion.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        print(<span class="hljs-string">u'Transcript: &#123;&#125;'</span>.format(result.alternatives[<span class="hljs-number">0</span>].transcript))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">speech_file = <span class="hljs-string">"audio_file.wav"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">transcribe_file(speech_file)</span></pre></td></tr></table></figure></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/25/error_set/google_speech_api_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Docker 설치하기</title>
      <link>http://yoursite.com/2019/02/24/setting/docker_install/</link>
      <guid>http://yoursite.com/2019/02/24/setting/docker_install/</guid>
      <pubDate>Sun, 24 Feb 2019 06:35:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Docker 설치와 기본 명령어 기록.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Docker 설치와 기본 명령어 기록.</li></ul><a id="more"></a>​<h2 id="Docker-설치"><a href="#Docker-설치" class="headerlink" title="Docker 설치"></a>Docker 설치</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sudo sh</span></pre></td></tr></table></figure><p>​</p><h2 id="설치-확인"><a href="#설치-확인" class="headerlink" title="설치 확인"></a>설치 확인</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker version</span></pre></td></tr></table></figure><ul><li>설치가 완료되면 아래과 같이 결과가 나온다.</li></ul><center><img src="/images/setting/20190224_1535.png" alt="설치 완료"></center><br>​<h2 id="docker-명령어-모음"><a href="#docker-명령어-모음" class="headerlink" title="docker 명령어 모음"></a>docker 명령어 모음</h2><hr><ol><li>Image 파일 설치 :  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker run ubuntu:16.04</span></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>docker run </p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker run ubuntu:16.04</span></pre></td></tr></table></figure></li><li><p>docker exec : 실행중인 컨테이너에 접속할 때 사용</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker <span class="hljs-built_in">exec</span> -it mysql bash</span></pre></td></tr></table></figure></li><li><p>docker image 확인</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker images</span></pre></td></tr></table></figure></li><li><p>docker container 확인</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker ps -a</span></pre></td></tr></table></figure></li><li><p>docker image 제거</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker rmi <span class="hljs-string">'image id'</span></span></pre></td></tr></table></figure></li><li><p>docker container 제거</p> <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">docker rm <span class="hljs-string">'conatiner id'</span></span></pre></td></tr></table></figure><p>​</p></li></ol><h2 id="참고한-URL"><a href="#참고한-URL" class="headerlink" title="참고한 URL"></a>참고한 URL</h2><ul><li>[URL] : <a href="https://subicura.com/2017/01/19/docker-guide-for-beginners-2.html" target="_blank" rel="noopener">https://subicura.com/2017/01/19/docker-guide-for-beginners-2.html</a></li><li>매우 잘 설명 되어 있고 예제 코드도 많다.</li></ul><br><ul><li>[URL] : <a href="http://pyrasis.com/book/DockerForTheReallyImpatient/Chapter20/08" target="_blank" rel="noopener">http://pyrasis.com/book/DockerForTheReallyImpatient/Chapter20/08</a></li><li>Exec 명령어 설명되어 있다.</li></ul><br><ul><li>[URL] : <a href="https://blusky10.tistory.com/362" target="_blank" rel="noopener">https://blusky10.tistory.com/362</a></li><li>docker mysql 설치할 때 참조했다.</li></ul><br><ul><li>[URL] : <a href="https://behonestar.tistory.com/85" target="_blank" rel="noopener">https://behonestar.tistory.com/85</a></li><li>docker 전체 삭제 명령어</li></ul><br><ul><li>[URL] : <a href="https://blog.hanumoka.net/2018/04/29/docker-20180429-docker-install-mysql/" target="_blank" rel="noopener">https://blog.hanumoka.net/2018/04/29/docker-20180429-docker-install-mysql/</a></li><li>마찬가지로 mysql 설치할 때 참조했다.<br>​</li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/setting/docker_install/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Ubuntu E Problem executing scripts</title>
      <link>http://yoursite.com/2019/02/24/error_set/ubuntu_error/</link>
      <guid>http://yoursite.com/2019/02/24/error_set/ubuntu_error/</guid>
      <pubDate>Sun, 24 Feb 2019 03:22:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Error : Ubuntu E: Problem executing scripts APT&lt;br&gt;우분투에서 apt-get 사용하다 발생한 error&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Error : Ubuntu E: Problem executing scripts APT<br>우분투에서 apt-get 사용하다 발생한 error</li></ul><a id="more"></a><ul><li><p>Solution </p>  <figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove libappstream3</span></pre></td></tr></table></figure><p>  쉽게 해결된다.</p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/24/error_set/ubuntu_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Google Cloud Storage 설치하기</title>
      <link>http://yoursite.com/2019/02/14/setting/google_cloud_storage/</link>
      <guid>http://yoursite.com/2019/02/14/setting/google_cloud_storage/</guid>
      <pubDate>Thu, 14 Feb 2019 01:38:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;Google Cloud Storage 설치&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>Google Cloud Storage 설치</li></ul><a id="more"></a>​<h2 id="설치-과정"><a href="#설치-과정" class="headerlink" title="설치 과정"></a>설치 과정</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">curl https://sdk.cloud.google.com | bash</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="hljs-built_in">exec</span> -l <span class="hljs-variable">$SHELL</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">gcloud init</span></pre></td></tr></table></figure><p>​</p><h2 id="새로운-버킷-생성-명령어"><a href="#새로운-버킷-생성-명령어" class="headerlink" title="새로운 버킷 생성 명령어"></a>새로운 버킷 생성 명령어</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">gsutil mb -l us-east1 gs://my-awesome-bucket/</span></pre></td></tr></table></figure><p>​</p><h2 id="파일-업로드"><a href="#파일-업로드" class="headerlink" title="파일 업로드"></a>파일 업로드</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">gsutil cp Desktop/kitten.png gs://my-awesome-bucket</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">gsutil cp /home/lee/video/chul9hyung/5Hj3sW2OroU.wav gs://my-youtube-bucket</span></pre></td></tr></table></figure><p>​​</p><h2 id="버킷에-파일-조회"><a href="#버킷에-파일-조회" class="headerlink" title="버킷에 파일 조회"></a>버킷에 파일 조회</h2><hr><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">gsutil ls gs://my-awesome-bucket</span></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/14/setting/google_cloud_storage/#disqus_thread</comments>
    </item>
    
    <item>
      <title>GCS API 403 caller has no permission</title>
      <link>http://yoursite.com/2019/02/14/error_set/google_cloud_storage_error/</link>
      <guid>http://yoursite.com/2019/02/14/error_set/google_cloud_storage_error/</guid>
      <pubDate>Thu, 14 Feb 2019 01:23:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;에러 : 403 caller has no error.&lt;br&gt;GCS 사용하다가 마주친 에러&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>에러 : 403 caller has no error.<br>GCS 사용하다가 마주친 에러</li></ul><a id="more"></a><hr><ul><li><p>Solution 1 : 결제 에러 관련 </p><p>bucket을 새로 만들어본다.   </p><ul><li><p>조회 명령어</p><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">gsutil ls gs://my-awesome-bucket</span></pre></td></tr></table></figure></li><li><p>bucket 새로 생성</p><figure class="highlight bash hljs"><table><tr><td class="code"><pre><span class="line">gsutil mb -l us-east1 gs://my-awesome-bucket/</span></pre></td></tr></table></figure></li></ul></li></ul><hr><ul><li><p>Solution 2 : 권한 에러 관련 </p><p>공개로 돌려버리면 된다.</p><center><img src="/images/error_set/gcs_error.png" alt></center><br><p>all users를 추가하면 된다.</p></li></ul>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/14/error_set/google_cloud_storage_error/#disqus_thread</comments>
    </item>
    
    <item>
      <title>PostgreSQL 백업 복원</title>
      <link>http://yoursite.com/2019/02/07/setting/postgresql_backup/</link>
      <guid>http://yoursite.com/2019/02/07/setting/postgresql_backup/</guid>
      <pubDate>Thu, 07 Feb 2019 04:58:00 GMT</pubDate>
      <description>
      
        &lt;ul&gt;
&lt;li&gt;PostgreSQL은 DB 특성상 console 작업이 너무 불편해 PgAdmin을 연동해야 한다.&lt;/li&gt;
&lt;/ul&gt;
      
      </description>
      
      
      <content:encoded><![CDATA[<ul><li>PostgreSQL은 DB 특성상 console 작업이 너무 불편해 PgAdmin을 연동해야 한다.</li></ul><a id="more"></a>​<h2 id="PgAdmin-연동"><a href="#PgAdmin-연동" class="headerlink" title="PgAdmin 연동"></a>PgAdmin 연동</h2><hr><ul><li>PostgreSQL 외부접속을 허용한다.</li></ul><ol><li><p>listen_addresses 변경</p><ul><li><p>/etc/postgrsql/9.5/main/postgresql.conf 에 들어간다. 저 부분을 변경해준다.</p><center><img src="/images/setting/20190207_1358.png"></center><br></li></ul></li><li><p>host 값 추가</p><ul><li><p>/etc/postgresql/9.5/main/pg_hba.conf 에 들어가 가장 마지막 부분에 한 줄 입력해준다.</p><center><img src="/images/setting/20190207_1359.png"></center><br></li></ul></li><li><p>DB 재시작</p></li></ol><h2 id="백업"><a href="#백업" class="headerlink" title="백업"></a>백업</h2><hr><ul><li>Backup을 눌러준다.</li></ul><center><img src="/images/setting/20190207_1400.png"></center><br><h2 id="복구"><a href="#복구" class="headerlink" title="복구"></a>복구</h2><hr><ul><li>Restore을 클릭해준다.</li></ul><center><img src="/images/setting/20190207_1401.png"></center><br><h2 id="참고-URL"><a href="#참고-URL" class="headerlink" title="참고 URL"></a>참고 URL</h2><ul><li>[URL] : <a href="http://printhelloworld.tistory.com/143" target="_blank" rel="noopener">http://printhelloworld.tistory.com/143</a></li></ul><p>​</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2019/02/07/setting/postgresql_backup/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
